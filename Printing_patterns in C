Pattern Programs in C
Printing patterns using C programs has always been an interesting problem domain. We can print different patterns like star patterns, pyramid patterns, Floyd’s triangle, Pascal’s triangle, etc. in C language. These problems generally require the knowledge of loops and if-else statements.


pattern programs in c
Programs to Print Patterns in C
1. Right Half Pyramid Pattern in C
The right-half pyramid is nothing but a right-angle triangle whose hypotenuse is in the right direction. We can print the right half pyramid pattern using numbers, alphabets, or any other character like a star (*).

Example:
Programs to Print Patterns in C
1. Right Half Pyramid Pattern in C
The right-half pyramid is nothing but a right-angle triangle whose hypotenuse is in the right direction. We can print the right half pyramid pattern using numbers, alphabets, or any other character like a star (*).

Example:



// C program to print right half pyramid pattern of star 
#include <stdio.h> 

  

int main() 
{ 

    int rows = 5; 

  

    // first loop for printing rows 

    for (int i = 0; i < rows; i++) { 

  

        // second loop for printing character in each rows 

        for (int j = 0; j <= i; j++) { 

            printf("* "); 

        } 

        printf("\n"); 

    } 

    return 0; 
}

2. Left Half Pyramid Pattern in C
The Left Half Pyramid looks like a right-angled triangle with its hypotenuse facing the left. We can also print this pattern using a character, alphabets, or numbers.

Example:

// c program to print left half pyramid pattern of star 
#include <stdio.h> 

  

int main() 
{ 

    int rows = 5; 

  

    // first loop is for printing the rows 

    for (int i = 0; i < rows; i++) { 

  

        // loop for printing leading whitespaces 

        for (int j = 0; j < 2 * (rows - i) - 1; j++) { 

            printf(" "); 

        } 

  

        // loop for printing * character 

        for (int k = 0; k <= i; k++) { 

            printf("* "); 

        } 

        printf("\n"); 

    } 

    return 0; 
}
Output
